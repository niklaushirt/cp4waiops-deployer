
# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Patches
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************

- name: 🛰️  START - PATCH TOPOLOGY
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


- name: Log
  shell: |
    export MESSAGE="Patching Topology Deployment"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo $currentDate" - "$MESSAGE  >> ../install_{{current_cp4waiops_feature.kind}}.log
  ignore_errors: true

- name: 📣 OCP CONSOLE - Create Openshift NOTIFICATION
  shell: |
    cat <<EOF | oc apply -f -
    apiVersion: console.openshift.io/v1
    kind: ConsoleNotification
    metadata:
      name: cp4waiops-notification
    spec:
      backgroundColor: '#ffd500'
      color: '#000'
      location: {{global_config.position_ocp_notifications | default("BannerTop")}}
      text: 'Installing {{current_cp4waiops_feature.kind}} - Patching Topology Deployment'    
    EOF
  ignore_errors: true
  when: global_config.create_ocp_notifications | default(true) == true  


# --------------------------------------------------------------------------------------------------------------------------------------
# Patch Ingress
# --------------------------------------------------------------------------------------------------------------------------------------
- name: 🩹 PATCH - Patch Ingress policy-group
  shell: oc patch namespace default --type=json -p '[{"op":"add","path":"/metadata/labels","value":{"network.openshift.io/policy-group":"ingress"}}]'
  register: ingress_patched


# - name: 🩹 PATCH - Patch AIOpsAnalyticsOrchestrator Pull Secret
#   shell: oc patch AIOpsAnalyticsOrchestrator aiops -n {{ current_cp4waiops_cluster.project }} --type merge  --patch-file ./templates/waiops/patches/analytics-pull-patch.yaml
#   ignore_errors: true
#   register: irorchestrator_patched



- name: 📣 OCP CONSOLE - Create Openshift NOTIFICATION
  shell: |
    cat <<EOF | oc apply -f -
    apiVersion: console.openshift.io/v1
    kind: ConsoleNotification
    metadata:
      name: cp4waiops-notification
    spec:
      backgroundColor: '#ff7700'
      color: '#000'
      location: {{global_config.position_ocp_notifications | default("BannerTop")}}
      text: 'Installing {{current_cp4waiops_feature.kind}} - 🕦 Wait for Cassandra to become ready (about 5-15 minutes) - Started at $(date +%H:%M:%S) UTC'    
    EOF
  ignore_errors: true
  when: global_config.create_ocp_notifications | default(true) == true  


# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for Cassandra Pod
# --------------------------------------------------------------------------------------------------------------------------------------
- name: 🕦 PATCH - Wait for Cassandra Pod to become available
  shell: oc get po -n {{ current_cp4waiops_cluster.project }} | grep aiops-topology-cassandra-0| grep 1/1| grep -c ""
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout == "1"
  retries: 500
  delay: 15



  
- name: 📣 OCP CONSOLE - Create Openshift NOTIFICATION
  shell: |
    cat <<EOF | oc apply -f -
    apiVersion: console.openshift.io/v1
    kind: ConsoleNotification
    metadata:
      name: cp4waiops-notification
    spec:
      backgroundColor: '#ff7700'
      color: '#000'
      location: {{global_config.position_ocp_notifications | default("BannerTop")}}
      text: 'Installing {{current_cp4waiops_feature.kind}} - 🕦 Wait for Topology to become ready (about 25-35 minutes) - Started at $(date +%H:%M:%S) UTC'    
    EOF
  ignore_errors: true
  when: global_config.create_ocp_notifications | default(true) == true  


# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for Topology Pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: 🕦 PATCH - Wait for Topology Pods to become available
  shell: oc get po -n {{ current_cp4waiops_cluster.project }} | grep aiops-topology-merge| grep -c ""
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout == "1"
  retries: 500
  delay: 15


# --------------------------------------------------------------------------------------------------------------------------------------
# Patch Topology Pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: 🩹 PATCH - Patch aiops-topology-merge
  shell: oc patch deployment aiops-topology-merge -n {{ current_cp4waiops_cluster.project }} --patch-file "{{role_path}}/templates/waiops/patches/aiops-topology-merge-patch.yaml"
  ignore_errors: true


# - name: 🩹 PATCH - Patch aiops-topology-search
#   shell: oc patch deployment aiops-topology-search -n {{ current_cp4waiops_cluster.project }} --patch-file "{{role_path}}/templates/waiops/patches/aiops-topology-search-patch.yaml"
#   ignore_errors: true


- name: 🩹 PATCH - Patch aiops-topology-status
  shell: oc patch deployment aiops-topology-status -n {{ current_cp4waiops_cluster.project }} --patch-file "{{role_path}}/templates/waiops/patches/aiops-topology-status-patch.yaml"
  ignore_errors: true


- name: 🩹 PATCH - Patch aiops-topology-layout
  shell: oc patch deployment aiops-topology-layout -n {{ current_cp4waiops_cluster.project }} --patch-file "{{role_path}}/templates/waiops/patches/aiops-topology-layout-patch.yaml"
  ignore_errors: true






# --------------------------------------------------------------------------------------------------------------------------------------
# Delete ImgPull error pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: 🩹 PATCH - Delete Pods with ImgPull Error  
  shell: |
        errorPods=$(oc get po -n {{ current_cp4waiops_cluster.project }}|grep ImagePull|awk '{print$1}')
        if [[ ! $errorPods == "" ]]; then
          echo "Refreshing Pods"
          oc delete pod $(oc get po -n {{ current_cp4waiops_cluster.project }}|grep ImagePull|awk '{print$1}'):-notfound  --ignore-not-found -n {{ current_cp4waiops_cluster.project }}>/dev/null 2>/dev/null
        fi


  ignore_errors: true
